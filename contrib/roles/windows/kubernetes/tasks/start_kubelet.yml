---
#- name: Kubelet | Delete kubeconfig
#  win_file:
#    path: "{{ install_path }}/kubeconfig.yaml"
#    state: absent
    #
    #- name: Kubelet | Create kubeconfig
    #  win_lineinfile:
    #    path: "{{ install_path }}/kubeconfig.yaml"
    #    create: yes
    #    line: |
    #      apiVersion: v1
    #      kind: Config
    #      clusters:
    #      - name: local
    #        cluster:
    #          server: http://{{ kubernetes_info.MASTER_IP }}:8080
    #      users:
    #      - name: kubelet
    #      contexts:
    #      - context:
    #          cluster: local
    #          user: kubelet
    #        name: kubelet-context
    #      current-context: kubelet-context
    #    newline: unix

- name: Kubernetes | check if Kubelet is installed
  win_service:
    name: kubelet
  register: kubelet_service

- name: Kubelet | Remove kubelet service if it exists
  win_service:
    name: kubelet
    state: absent
  when: kubelet_service.exists

- name: Kubelet | Create the service wrapper config file
  block:
    - name: Kubelet | Remove existing service wrapper config file
      win_file:
        state: absent
        path: '{{ install_path }}\kubelet-servicewrapper-config.ini'

    - name: Kubelet | Create the new service wrapper config file
      win_lineinfile:
        path: '{{ install_path }}\kubelet-servicewrapper-config.ini'
        create: yes
        line: >
          log-file={{ install_path }}/kubelet.log

          service-name=kubelet

          service-command="{{ install_path }}\\kubelet.exe"
          --config="{{ install_path }}\\kubelet-config"
          --bootstrap-kubeconfig="{{ install_path }}\\bootstrap-kubeconfig"
          --enforce-node-allocatable=""
          --cgroups-per-qos=false
          --cloud-provider=aws
          --kubeconfig="{{ install_path }}\\kubeconfig"
          --v=10
          --network-plugin=cni --cni-bin-dir="{{ install_path }}\\cni"
          --cni-conf-dir="{{ install_path }}\\cni"
          --pod-infra-container-image=mcr.microsoft.com/k8s/core/pause:1.2.0
          --resolv-conf=""
          --cert-dir="c:/var/lib/kubelet/pki/"

- name: Kubelet | Create Kublet Windows service
  win_service:
    name: kubelet
    display_name: Kubernetes Kubelet
    description: Kubernetes Kubelet service
    path: >-
      "{{ install_path }}\servicewrapper.exe" --config "{{ install_path }}\kubelet-servicewrapper-config.ini"

- name: Kublet | Set Kublet service failure command
  win_shell: >-
    sc.exe failure kubelet reset=40 actions=restart/0/restart/0/run/30000
    command="powershell.exe Move-Item
    \\\`"{{ install_path }}/kubelet.log\\\`"
    \\\`"{{ install_path }}/kubelet.log_`$(Get-Date -f yyyy-MM-dd-hh-mm-ss)\\\`";
    Restart-Service kubelet"

- name: Kublet | Enable Kublet service failure flags
  win_shell: sc.exe failureflag kubelet 1

# Start the kubelet to ensure OVN gives subnet to this minion
- name: Kubelet | Start service kubelet
  win_service:
    name: kubelet
    start_mode: auto
    state: started
